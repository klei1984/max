/* Copyright (c) 2021 M.A.X. Port Team
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#ifndef ENUMS_HPP
#define ENUMS_HPP

#include <cstdint>

enum ResourceType : uint8_t { ResourceType_GameBase, ResourceType_GamePref, ResourceType_GameData };

enum : uint32_t {
    GROUND_COVER = 0x1,
    EXPLODING = 0x2,
    ANIMATED = 0x4,
    CONNECTOR_UNIT = 0x8,
    BUILDING = 0x10,
    MISSILE_UNIT = 0x20,
    MOBILE_AIR_UNIT = 0x40,
    MOBILE_SEA_UNIT = 0x80,
    MOBILE_LAND_UNIT = 0x100,
    STATIONARY = 0x200,
    HASH_TEAM_GRAY = 0x400,
    HASH_TEAM_BLUE = 0x800,
    HASH_TEAM_GREEN = 0x1000,
    HASH_TEAM_RED = 0x2000,
    UPGRADABLE = 0x4000,
    HASH_TEAM_DERELICT = 0x8000,
    HOVERING = 0x10000,
    HAS_FIRING_SPRITE = 0x20000,
    FIRES_MISSILES = 0x40000,
    CONSTRUCTOR_UNIT = 0x80000,
    ELECTRONIC_UNIT = 0x200000,
    SELECTABLE = 0x400000,
    STANDALONE = 0x800000,
    REQUIRES_SLAB = 0x1000000,
    TURRET_SPRITE = 0x2000000,
    SENTRY_UNIT = 0x4000000,
    SPINNING_TURRET = 0x8000000,
    REGENERATING_UNIT = 0x10000000
};

enum : uint8_t { NO_CARGO = 0x0, MATERIALS = 0x1, FUEL = 0x2, GOLD = 0x3 };

enum UnitOrderType : uint8_t {
    ORDER_AWAIT = 0x0,
    ORDER_TRANSFORM = 0x1,
    ORDER_MOVE = 0x2,
    ORDER_FIRE = 0x3,
    ORDER_BUILD = 0x4,
    ORDER_ACTIVATE = 0x5,
    ORDER_NEW_ALLOCATE = 0x6,
    ORDER_POWER_ON = 0x7,
    ORDER_POWER_OFF = 0x8,
    ORDER_EXPLODE = 0x9,
    ORDER_UNLOAD = 0xA,
    ORDER_CLEAR = 0xB,
    ORDER_SENTRY = 0xC,
    ORDER_LAND = 0xD,
    ORDER_TAKE_OFF = 0xE,
    ORDER_LOAD = 0xF,
    ORDER_IDLE = 0x10,
    ORDER_REPAIR = 0x11,
    ORDER_REFUEL = 0x12,
    ORDER_RELOAD = 0x13,
    ORDER_TRANSFER = 0x14,
    ORDER_HALT_BUILDING = 0x15,
    ORDER_AWAIT_SCALING = 0x16,
    ORDER_AWAIT_TAPE_POSITIONING = 0x17,
    ORDER_AWAIT_STEAL_UNIT = 0x18,
    ORDER_AWAIT_DISABLE_UNIT = 0x19,
    ORDER_DISABLE = 0x1A,
    ORDER_MOVE_TO_UNIT = 0x1B,
    ORDER_UPGRADE = 0x1C,
    ORDER_LAY_MINE = 0x1D,
    ORDER_MOVE_TO_ATTACK = 0x1E,
    ORDER_HALT_BUILDING_2 = 0x1F,
    ORDER_COUNT_MAX
};

enum UnitOrderStateType : uint8_t {
    ORDER_STATE_INIT = 0x0,
    ORDER_STATE_EXECUTING_ORDER = 0x1,
    ORDER_STATE_READY_TO_EXECUTE_ORDER = 0x2,
    ORDER_STATE_STORE = 0x3,
    ORDER_STATE_PREPARE_STORE = 0x4,
    ORDER_STATE_IN_PROGRESS = 0x5,
    ORDER_STATE_IN_TRANSITION = 0x6,
    ORDER_STATE_ISSUING_PATH = 0x7,
    ORDER_STATE_READY_TO_FIRE = 0x8,
    ORDER_STATE_FIRE_IN_PROGRESS = 0x9,
    ORDER_STATE_10 = 0xA,
    ORDER_STATE_BUILD_IN_PROGRESS = 0xB,
    ORDER_STATE_PATH_REQUEST_CANCEL = 0xC,
    ORDER_STATE_BUILD_CANCEL = 0xD,
    ORDER_STATE_DESTROY = 0xE,
    ORDER_STATE_LOADING_IN_PROGRESS = 0xF,
    ORDER_STATE_FINISH_LOADING = 0x10,
    ORDER_STATE_UNLOADING_IN_PROGRESS = 0x11,
    ORDER_STATE_FINISH_UNLOADING = 0x12,
    ORDER_STATE_FINISH_LANDING = 0x13,
    ORDER_STATE_FINISH_TAKE_OFF = 0x14,
    ORDER_STATE_21 = 0x15,
    ORDER_STATE_PROGRESS_TRANSFORMING = 0x16,
    ORDER_STATE_FINISH_TRANSFORMING = 0x17,
    ORDER_STATE_CLEAR_PATH = 0x18,
    ORDER_STATE_SELECT_SITE = 0x19,
    ORDER_STATE_BUILD_CLEARING = 0x1A,
    ORDER_STATE_EXPLODE = 0x1B,
    ORDER_STATE_MOVE_INIT = 0x1C,
    ORDER_STATE_MOVE_GETTING_PATH = 0x1D,
    ORDER_STATE_BUILDING_READY = 0x1E,
    ORDER_STATE_UNIT_READY = 0x1F,
    ORDER_STATE_EXPAND = 0x20,
    ORDER_STATE_SHRINK = 0x21,
    ORDER_STATE_TAPE_POSITIONING_INIT = 0x22,
    ORDER_STATE_TAPE_POSITIONING_ENTER = 0x23,
    ORDER_STATE_TAPE_POSITIONING_DEINIT = 0x24,
    ORDER_STATE_TAPE_POSITIONING_LEAVE = 0x25,
    ORDER_STATE_ELEVATE = 0x26,
    ORDER_STATE_LOWER = 0x27,
    ORDER_STATE_ATTACK_PENDING = 0x28,
    ORDER_STATE_ATTACK_BEGINNING = 0x29,
    ORDER_STATE_NEW_ORDER = 0x2A,
    ORDER_STATE_INACTIVE = 0x2B,
    ORDER_STATE_PLACING_MINES = 0x2C,
    ORDER_STATE_REMOVING_MINES = 0x2D,
    ORDER_STATE_BUILD_ABORT = 0x2E,
};

enum PlayerTeamType : uint8_t {
    PLAYER_TEAM_RED = 0x0,
    PLAYER_TEAM_GREEN = 0x1,
    PLAYER_TEAM_BLUE = 0x2,
    PLAYER_TEAM_GRAY = 0x3,
    PLAYER_TEAM_ALIEN = 0x4,
    PLAYER_TEAM_MAX = 0x5,
};

enum PlayerType : uint8_t {
    TEAM_TYPE_NONE,
    TEAM_TYPE_PLAYER,
    TEAM_TYPE_COMPUTER,
    TEAM_TYPE_REMOTE,
    TEAM_TYPE_ELIMINATED,
};

enum TeamClanType : uint8_t {
    TEAM_CLAN_RANDOM = 0x0,
    TEAM_CLAN_THE_CHOSEN = 0x1,
    TEAM_CLAN_CRIMSON_PATH = 0x2,
    TEAM_CLAN_VON_GRIFFIN = 0x3,
    TEAM_CLAN_AYERS_HAND = 0x4,
    TEAM_CLAN_MUSASHI = 0x5,
    TEAM_CLAN_SACRED_EIGHTS = 0x6,
    TEAM_CLAN_7_KNIGHTS = 0x7,
    TEAM_CLAN_AXIS_INC = 0x8,
};

enum ExitCodeType : uint8_t {
    EXIT_CODE_NO_ERROR,
    EXIT_CODE_THANKS,
    EXIT_CODE_NO_MOUSE,
    EXIT_CODE_INSUFFICIENT_MEMORY,
    EXIT_CODE_NO_SOUND_CARD,
    EXIT_CODE_SCREEN_INIT_FAILED,
    EXIT_CODE_RES_FILE_NOT_FOUND,
    EXIT_CODE_CANNOT_READ_RES_FILE,
    EXIT_CODE_RES_FILE_INVALID_ID,
    EXIT_CODE_INVALID_DIR_NAME,
    EXIT_CODE_INVALID_SCRIPT_FILE,
    EXIT_CODE_CANNOT_READ_SCRIPT_FILE,
    EXIT_CODE_CANNOT_FIND_MAX_INI,
    EXIT_CODE_CANNOT_FIND_MAX_CD,
    EXIT_CODE_HOW_TO_START_MAX,
    EXIT_CODE_VERSION_EXPIRED,
    EXIT_CODE_WRL_FILE_OPEN_ERROR
};

enum {
    WINDOW_MODE_WINDOWED,
    WINDOW_MODE_FULLSCREEN,
    WINDOW_MODE_BORDERLESS,
};

enum {
    VICTORY_TYPE_DURATION,
    VICTORY_TYPE_SCORE,
};

enum {
    PLAY_MODE_TURN_BASED,
    PLAY_MODE_SIMULTANEOUS_MOVES,
    PLAY_MODE_UNKNOWN,
};

enum {
    CARGO_FUEL = 0x20,
    CARGO_GOLD = 0x40,
    CARGO_MATERIALS = 0x80,
    CARGO_MASK = 0x1F,
};

enum CargoType : uint8_t {
    CARGO_TYPE_NONE,
    CARGO_TYPE_RAW,
    CARGO_TYPE_FUEL,
    CARGO_TYPE_GOLD,
    CARGO_TYPE_LAND,
    CARGO_TYPE_SEA,
    CARGO_TYPE_AIR,
};

enum ResearchTopicType : uint8_t {
    RESEARCH_TOPIC_ATTACK,
    RESEARCH_TOPIC_SHOTS,
    RESEARCH_TOPIC_RANGE,
    RESEARCH_TOPIC_ARMOR,
    RESEARCH_TOPIC_HITS,
    RESEARCH_TOPIC_SPEED,
    RESEARCH_TOPIC_SCAN,
    RESEARCH_TOPIC_COST,
    RESEARCH_TOPIC_COUNT
};

enum SfxType : uint8_t {
    SFX_TYPE_INVALID,
    SFX_TYPE_IDLE,
    SFX_TYPE_WATER_IDLE,
    SFX_TYPE_DRIVE,
    SFX_TYPE_WATER_DRIVE,
    SFX_TYPE_STOP,
    SFX_TYPE_WATER_STOP,
    SFX_TYPE_TRANSFORM,
    SFX_TYPE_BUILDING,
    SFX_TYPE_SHRINK,
    SFX_TYPE_EXPAND,
    SFX_TYPE_TURRET,
    SFX_TYPE_FIRE,
    SFX_TYPE_HIT,
    SFX_TYPE_EXPLOAD,
    SFX_TYPE_POWER_CONSUMPTION_START,
    SFX_TYPE_POWER_CONSUMPTION_END,
    SFX_TYPE_LAND,
    SFX_TYPE_TAKE,
    SFX_TYPE_LIMIT
};

enum UnitAngleType : uint8_t {
    UNIT_ANGLE_N,
    UNIT_ANGLE_NE,
    UNIT_ANGLE_E,
    UNIT_ANGLE_SE,
    UNIT_ANGLE_S,
    UNIT_ANGLE_SW,
    UNIT_ANGLE_W,
    UNIT_ANGLE_NW
};

enum ConnectorDirectionType : uint16_t {
    CONNECTOR_NORTH_LEFT = 0x1,
    CONNECTOR_NORTH_RIGHT = 0x2,
    CONNECTOR_EAST_TOP = 0x4,
    CONNECTOR_EAST_BOTTOM = 0x8,
    CONNECTOR_SOUTH_LEFT = 0x10,
    CONNECTOR_SOUTH_RIGHT = 0x20,
    CONNECTOR_WEST_TOP = 0x40,
    CONNECTOR_WEST_BOTTOM = 0x80,
    CONNECTION_BEING_TESTED = 0x400
};

enum GameStateType : uint8_t {
    GAME_STATE_0 = 0x0,
    GAME_STATE_1 = 0x1,
    GAME_STATE_2 = 0x2,
    GAME_STATE_3_MAIN_MENU = 0x3,
    GAME_STATE_4 = 0x4,
    GAME_STATE_5 = 0x5,
    GAME_STATE_6 = 0x6,
    GAME_STATE_7_SITE_SELECT = 0x7,
    GAME_STATE_8_IN_GAME = 0x8,
    GAME_STATE_9_END_TURN = 0x9,
    GAME_STATE_10 = 0xA,
    GAME_STATE_11 = 0xB,
    GAME_STATE_12 = 0xC,
    GAME_STATE_13 = 0xD,
    GAME_STATE_14 = 0xE,
    GAME_STATE_15_FATAL_ERROR = 0xF
};

enum CheatCodeType : uint8_t {
    CHEAT_CODE_MAXSPY = 0,
    CHEAT_CODE_MAXSURVEY = 1,
    CHEAT_CODE_MAXSTORAGE = 2,
    CHEAT_CODE_MAXAMMO = 3,
    CHEAT_CODE_MAXSUPER = 4,
    CHEAT_CODE_COUNT = 5
};

enum CautionLevelType : uint8_t {
    CAUTION_LEVEL_NONE,
    CAUTION_LEVEL_AVOID_REACTION_FIRE,
    CAUTION_LEVEL_AVOID_NEXT_TURNS_FIRE,
    CAUTION_LEVEL_AVOID_ALL_DAMAGE
};

enum AiStrategyType : uint8_t {
    AI_STRATEGY_RANDOM,
    AI_STRATEGY_DEFENSIVE,
    AI_STRATEGY_MISSILES,
    AI_STRATEGY_AIR,
    AI_STRATEGY_SEA,
    AI_STRATEGY_SCOUT_HORDE,
    AI_STRATEGY_TANK_HORDE,
    AI_STRATEGY_FAST_ATTACK,
    AI_STRATEGY_COMBINED_ARMS,
    AI_STRATEGY_ESPIONAGE,
    AI_STRATEGY_MAX
};

enum ComputerCheatingLevel : uint8_t {
    COMPUTER_CHEATING_LEVEL_NONE,
    COMPUTER_CHEATING_LEVEL_TOLERABLE,
    COMPUTER_CHEATING_LEVEL_SHAMELESS,
    COMPUTER_CHEATING_LEVEL_INSUFFERABLE
};

enum MapViewUpdateType : uint8_t {
    MAP_VIEW_ZOOM,
    MAP_VIEW_CENTER,
    MAP_VIEW_SCROLL,
    MAP_VIEW_REFRESH,
};

enum InfoMapType : uint8_t {
    INFO_MAP_NO_INFO = 0x00,
    INFO_MAP_EXPLORED = 0x01,
    INFO_MAP_MINE_FIELD = 0x02,
    INFO_MAP_UNKNOWN = 0x04,
    INFO_MAP_CLEAR_OUT_ZONE = 0x08,
};

enum AccessModifierType : uint8_t {
    AccessModifier_NoModifiers = 0x00,
    AccessModifier_EnemySameClassBlocks = 0x01,
    AccessModifier_SameClassBlocks = 0x02,
    AccessModifier_Unused = 0x04,
    AccessModifier_MovesUnderBridge = 0x08,
    AccessModifier_IgnoreVisibility = 0x10,
    AccessModifier_IgnoreSurfaceClass = 0x20
};

enum WinLossState {
    VICTORY_STATE_GENERIC = 0,
    VICTORY_STATE_PENDING = 1,
    VICTORY_STATE_WON = 2,
    VICTORY_STATE_LOST = 3
};

#endif /* ENUMS_HPP */
